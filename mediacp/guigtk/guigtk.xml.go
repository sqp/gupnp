package guigtk

import (
	"bytes"
	"compress/gzip"
	"io"
)

// guigtkXML returns raw, uncompressed file data.
func guigtkXML() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xec, 0x5c,
		0x5f, 0x73, 0x9b, 0x38, 0x10, 0x7f, 0xef, 0xa7, 0xe0, 0x78, 0xbd, 0x71,
		0x12, 0xa7, 0xbd, 0x9b, 0x3e, 0x38, 0x74, 0xda, 0x74, 0xd2, 0xeb, 0x4c,
		0xaf, 0xd7, 0x69, 0xd2, 0xdc, 0x23, 0x23, 0xc3, 0xda, 0x56, 0x2d, 0x4b,
		0x9c, 0x24, 0x9c, 0xe4, 0xdb, 0x9f, 0x40, 0xd8, 0x06, 0x23, 0xfe, 0x08,
		0x1c, 0xd7, 0x4e, 0xf2, 0xd2, 0x89, 0x81, 0x5d, 0xf6, 0x27, 0xfd, 0xb4,
		0xbb, 0xd2, 0x2e, 0x1d, 0xbd, 0xbb, 0x5f, 0x10, 0x67, 0x09, 0x5c, 0x60,
		0x46, 0x2f, 0xdc, 0xe1, 0xc9, 0x99, 0xeb, 0x00, 0x0d, 0x58, 0x88, 0xe9,
		0xf4, 0xc2, 0xfd, 0x71, 0x73, 0x35, 0x78, 0xeb, 0xbe, 0xf3, 0x5e, 0x8d,
		0x7e, 0x1b, 0x0c, 0x9c, 0x4f, 0x40, 0x81, 0x23, 0x09, 0xa1, 0x73, 0x87,
		0xe5, 0xcc, 0x99, 0x12, 0x14, 0x82, 0xf3, 0xfa, 0x64, 0xf8, 0xf6, 0xe4,
		0xdc, 0x19, 0x0c, 0xd4, 0x43, 0x98, 0x4a, 0xe0, 0x13, 0x14, 0x80, 0xf7,
		0xca, 0x71, 0x46, 0x1c, 0xfe, 0x8b, 0x31, 0x07, 0xe1, 0x10, 0x3c, 0xbe,
		0x70, 0xa7, 0x72, 0xfe, 0xbb, 0xbb, 0x79, 0xd1, 0xeb, 0x93, 0xb7, 0xee,
		0x69, 0xfa, 0x18, 0x1b, 0xff, 0x84, 0x40, 0x3a, 0x01, 0x41, 0x42, 0x5c,
		0xb8, 0x9f, 0xe4, 0xfc, 0x86, 0x03, 0x5c, 0x4b, 0xc6, 0xc1, 0x75, 0x70,
		0x78, 0xe1, 0x4e, 0x30, 0x01, 0xf1, 0x37, 0x0b, 0x81, 0xb8, 0xc9, 0xf3,
		0x4a, 0x22, 0x60, 0x24, 0x5e, 0x50, 0xa1, 0x7f, 0xa9, 0xdf, 0x89, 0x6d,
		0xfa, 0xda, 0x80, 0xa2, 0x05, 0x38, 0x38, 0x60, 0x34, 0x35, 0x28, 0xbb,
		0xaf, 0xef, 0x39, 0xf2, 0x21, 0x02, 0xf5, 0x82, 0x70, 0xfe, 0x0d, 0xdf,
		0x8f, 0xe3, 0x89, 0x7e, 0xbd, 0x51, 0x41, 0xfa, 0x4f, 0x95, 0x82, 0x69,
		0x30, 0x43, 0x1c, 0x71, 0x8e, 0x1e, 0x6a, 0x34, 0x4c, 0x23, 0x96, 0x0e,
		0xc6, 0xb0, 0x5a, 0x4d, 0xf6, 0x44, 0x9d, 0x92, 0xf5, 0x9b, 0x6a, 0xd4,
		0x94, 0xac, 0x19, 0x9d, 0xe6, 0xc6, 0x67, 0x74, 0xaa, 0x87, 0xd7, 0x3c,
		0xd2, 0x9f, 0x17, 0x68, 0x9a, 0x8d, 0x32, 0x4e, 0xfe, 0xfc, 0x80, 0x82,
		0xf9, 0x1d, 0xe2, 0xe1, 0x6a, 0xa0, 0x23, 0xce, 0x22, 0xe0, 0xf2, 0x21,
		0x1d, 0x90, 0x0b, 0x77, 0x89, 0x05, 0x1e, 0x13, 0x70, 0xbd, 0x1b, 0x1e,
		0xc3, 0xe8, 0x74, 0x75, 0xd7, 0xfc, 0x70, 0x80, 0xa8, 0x3f, 0x61, 0x41,
		0x2c, 0x5c, 0xef, 0x0a, 0x11, 0xd1, 0xf8, 0x7c, 0x32, 0x69, 0x7e, 0xf2,
		0xa7, 0xeb, 0x2d, 0x20, 0xc4, 0x68, 0x20, 0x00, 0xe6, 0x83, 0x71, 0x66,
		0x51, 0x51, 0xda, 0x0e, 0xd5, 0x15, 0xe3, 0x87, 0x05, 0x6a, 0xa2, 0x0d,
		0xea, 0x83, 0xe9, 0x1b, 0x51, 0x13, 0x7e, 0x08, 0x80, 0x22, 0x65, 0x48,
		0x32, 0x49, 0x03, 0x21, 0x11, 0x97, 0x7d, 0x20, 0xa9, 0x25, 0x1f, 0x1d,
		0x1a, 0x24, 0x16, 0xd9, 0x20, 0xfa, 0x82, 0x85, 0xcc, 0x39, 0x2e, 0x0e,
		0x34, 0x04, 0x0e, 0xdc, 0xca, 0x77, 0x7d, 0x67, 0x77, 0x9f, 0xfb, 0xba,
		0x2f, 0xa5, 0xe3, 0x6b, 0x6f, 0x0f, 0xa6, 0x94, 0x7c, 0xcf, 0x00, 0xf4,
		0xf1, 0x61, 0x3f, 0x3e, 0x7e, 0xed, 0x67, 0xc7, 0x37, 0xce, 0xee, 0x1f,
		0xaa, 0x87, 0xe3, 0x9f, 0x74, 0x12, 0x6a, 0xe4, 0xdf, 0xdf, 0xde, 0x70,
		0x44, 0x23, 0xc6, 0x65, 0x0f, 0x25, 0x7a, 0x24, 0x54, 0x48, 0xec, 0xa1,
		0xe3, 0x1a, 0xd3, 0xb9, 0x02, 0x23, 0x99, 0xba, 0xf8, 0x99, 0x4e, 0x58,
		0xbf, 0x61, 0x79, 0x7f, 0x5b, 0x2d, 0x1f, 0xab, 0x49, 0xa9, 0x11, 0xbd,
		0x4d, 0xfe, 0xae, 0x61, 0x47, 0x83, 0xf8, 0xc7, 0x58, 0xe5, 0x00, 0xb8,
		0x86, 0xa2, 0x05, 0x05, 0x16, 0xd1, 0xe8, 0x7d, 0xf8, 0x33, 0x16, 0x72,
		0x01, 0x4a, 0x38, 0x5d, 0x3f, 0x89, 0xaf, 0x54, 0xd7, 0x2a, 0x7c, 0x42,
		0x1c, 0xa9, 0x5f, 0xae, 0x37, 0x3c, 0x3b, 0x6b, 0x5a, 0xe0, 0x42, 0x42,
		0xe4, 0x63, 0x1a, 0x70, 0x48, 0x75, 0x7b, 0xc3, 0x26, 0x81, 0x48, 0x79,
		0xa3, 0x82, 0xc0, 0x59, 0x0f, 0x2f, 0x20, 0x80, 0x2f, 0x2d, 0x7d, 0xc0,
		0x01, 0xe4, 0x2f, 0xda, 0xea, 0x3e, 0x0b, 0x3f, 0x0e, 0x6b, 0x18, 0xd2,
		0x27, 0x69, 0xd9, 0xa6, 0xc9, 0x32, 0xa5, 0xf3, 0x41, 0x10, 0xe5, 0xdc,
		0x86, 0x27, 0x1f, 0xd8, 0xbd, 0x06, 0x30, 0x56, 0x7f, 0xfc, 0x82, 0xb8,
		0xc7, 0x38, 0x56, 0x46, 0xa7, 0x4b, 0xd9, 0xf5, 0xd4, 0x64, 0x4b, 0x1c,
		0x20, 0x52, 0x12, 0x0a, 0x66, 0x98, 0x84, 0xeb, 0x59, 0xac, 0x05, 0x71,
		0xc9, 0xa8, 0xe4, 0x8c, 0xfc, 0xe5, 0xae, 0x1e, 0xb7, 0x04, 0xd4, 0x05,
		0x54, 0xd9, 0xc6, 0xd6, 0x76, 0xde, 0xba, 0x79, 0x91, 0x0e, 0xb6, 0x76,
		0xb5, 0xb7, 0xf3, 0x64, 0x54, 0x03, 0x36, 0x83, 0xbe, 0x64, 0x8b, 0x31,
		0x5b, 0x23, 0x5f, 0xa5, 0x23, 0xee, 0xb6, 0x60, 0x47, 0xe8, 0x7d, 0xe0,
		0x9b, 0x64, 0x17, 0xda, 0x45, 0x16, 0xb2, 0xa6, 0x5a, 0x79, 0xe3, 0x28,
		0x54, 0x8c, 0x04, 0x10, 0xb2, 0xca, 0x66, 0x32, 0xef, 0x59, 0x18, 0x93,
		0x24, 0xe5, 0xda, 0xf8, 0xb2, 0x82, 0x2e, 0x24, 0x25, 0xc7, 0xe3, 0x58,
		0x82, 0x30, 0xdd, 0xce, 0x3f, 0xb0, 0x72, 0x0a, 0x5a, 0xbf, 0xa7, 0xdc,
		0xcd, 0xfa, 0x96, 0x51, 0xf3, 0x69, 0x9d, 0x6a, 0xe5, 0x10, 0xcd, 0xf0,
		0xba, 0xc2, 0xbe, 0x81, 0x7b, 0x59, 0x04, 0x9d, 0xe4, 0x88, 0xbb, 0x02,
		0xbd, 0x40, 0x7c, 0x1e, 0x47, 0xa9, 0xcb, 0xdc, 0x3d, 0xe8, 0xbc, 0x1f,
		0x2d, 0x5c, 0x8f, 0x54, 0x96, 0xae, 0x92, 0xb2, 0x66, 0x6e, 0xc1, 0x7d,
		0x84, 0x68, 0xd8, 0x81, 0x94, 0x13, 0x4c, 0x88, 0xfd, 0x32, 0x88, 0x98,
		0xc0, 0x7a, 0x29, 0x97, 0x62, 0x4e, 0x1e, 0x95, 0xd1, 0x7c, 0xe3, 0x18,
		0xb4, 0x5d, 0xf1, 0xd7, 0x10, 0xa9, 0xc0, 0xaa, 0x92, 0x8f, 0x55, 0xee,
		0x91, 0xfd, 0x1c, 0x1e, 0xea, 0xa2, 0xb7, 0xf2, 0x7b, 0x47, 0xcd, 0x84,
		0x52, 0x32, 0x91, 0x47, 0xb5, 0x7b, 0x26, 0x7c, 0x41, 0x63, 0xe5, 0x4d,
		0x53, 0x16, 0x48, 0x2c, 0x93, 0x69, 0x6d, 0xb4, 0x75, 0x06, 0x78, 0x3a,
		0x93, 0x7e, 0x72, 0x6c, 0x07, 0x42, 0x65, 0x33, 0x6f, 0x6a, 0xc8, 0x7b,
		0x20, 0xf4, 0x89, 0x05, 0xf8, 0x2b, 0xd7, 0x63, 0xfb, 0xde, 0x3b, 0x8e,
		0x1a, 0xa5, 0x8e, 0x98, 0x6f, 0xe7, 0x7b, 0xf6, 0x3c, 0x6a, 0xdd, 0xc2,
		0x66, 0xdf, 0xa6, 0x7f, 0xee, 0x87, 0x35, 0xb6, 0xa2, 0x8a, 0x30, 0x53,
		0x4c, 0x7d, 0x48, 0xa6, 0xe5, 0x8d, 0x8d, 0x20, 0xda, 0xec, 0x3c, 0xbc,
		0x6c, 0x73, 0x6a, 0x23, 0x1e, 0x72, 0x74, 0xe7, 0x2f, 0x11, 0x89, 0xa1,
		0x91, 0x0e, 0x47, 0xcc, 0xbb, 0xd7, 0xfb, 0xe5, 0x5d, 0x3e, 0xb1, 0xbf,
		0x56, 0x73, 0x72, 0x30, 0x81, 0xce, 0x22, 0x4d, 0xcb, 0xf9, 0x6a, 0x34,
		0x16, 0x12, 0x2f, 0x4c, 0x2b, 0xa7, 0x17, 0x92, 0xbe, 0x68, 0xaa, 0x19,
		0xa9, 0x35, 0x57, 0xb1, 0xd2, 0xf4, 0xde, 0xd6, 0xcc, 0x34, 0x09, 0xb7,
		0x63, 0xa7, 0x49, 0xb2, 0x55, 0x4e, 0xa6, 0x91, 0x56, 0x2f, 0xb2, 0x0e,
		0x49, 0x79, 0x44, 0x50, 0x00, 0x33, 0x46, 0x54, 0xca, 0x6d, 0xc8, 0xb5,
		0x77, 0x92, 0xe6, 0xe7, 0xf8, 0x13, 0x66, 0x87, 0x73, 0x2f, 0x04, 0xaa,
		0x10, 0xee, 0x41, 0x20, 0x65, 0xa3, 0x9f, 0x9c, 0x5f, 0xb9, 0x9e, 0x0a,
		0x1d, 0xdd, 0xe9, 0x57, 0x13, 0x98, 0xf5, 0x38, 0xd9, 0xd2, 0xef, 0x88,
		0x83, 0x45, 0x4d, 0xf8, 0x7d, 0xec, 0x60, 0x91, 0x54, 0xd0, 0x3e, 0xc4,
		0x52, 0x32, 0x2a, 0x8e, 0x31, 0x66, 0x68, 0xd3, 0x33, 0x34, 0xc5, 0xb2,
		0xed, 0xce, 0xb0, 0xf4, 0xc5, 0x63, 0x92, 0xe7, 0x10, 0x00, 0x5e, 0x82,
		0xf0, 0x43, 0x98, 0xa0, 0x98, 0xc8, 0x6e, 0x56, 0xa4, 0x05, 0x43, 0xd7,
		0x2b, 0x14, 0xad, 0xed, 0x2d, 0x21, 0x18, 0x26, 0xae, 0x47, 0x19, 0x7d,
		0xf2, 0xae, 0xeb, 0x17, 0xc5, 0xbe, 0x5a, 0xd6, 0x46, 0x9b, 0x12, 0x76,
		0x93, 0xfd, 0x4f, 0x8c, 0xb1, 0x89, 0xeb, 0x79, 0x61, 0x6b, 0xa5, 0x64,
		0xab, 0x33, 0x13, 0x8d, 0x74, 0x7f, 0x6c, 0x15, 0x9b, 0xee, 0x84, 0x26,
		0xfb, 0x9f, 0x18, 0x5b, 0xaf, 0x4b, 0x5d, 0x10, 0x6d, 0xac, 0x78, 0x86,
		0x6c, 0xdd, 0x79, 0x62, 0xd7, 0x9d, 0xad, 0x93, 0x42, 0xcb, 0x53, 0x13,
		0x84, 0x27, 0x46, 0xd8, 0x2b, 0x53, 0x7b, 0x55, 0x1b, 0x43, 0x9e, 0x21,
		0x67, 0x6b, 0x4e, 0x6b, 0x34, 0xd2, 0x67, 0xb4, 0x19, 0xf9, 0x63, 0xbf,
		0x9b, 0x91, 0x62, 0x75, 0x56, 0x37, 0x5c, 0x1c, 0xcc, 0x4e, 0x64, 0xfb,
		0xc8, 0x54, 0xd7, 0x66, 0x73, 0xbd, 0x2c, 0x8f, 0x5d, 0x99, 0xd5, 0xaf,
		0x7a, 0x56, 0x75, 0x59, 0x0d, 0xf9, 0xa5, 0x2a, 0xfb, 0xf8, 0x2b, 0xfd,
		0xcf, 0x5d, 0xac, 0x74, 0x13, 0x7e, 0x33, 0xf6, 0x2a, 0xdc, 0x36, 0x8d,
		0x25, 0xcd, 0x90, 0xad, 0x37, 0x7d, 0x06, 0xa8, 0x25, 0x98, 0x6d, 0x7a,
		0x6b, 0xaa, 0x8a, 0xce, 0xe7, 0x47, 0xda, 0x60, 0xd3, 0x7f, 0x62, 0xad,
		0x2c, 0xeb, 0x30, 0xb3, 0x28, 0x4c, 0x3e, 0xcf, 0xa8, 0x39, 0x3e, 0xb3,
		0xde, 0x52, 0xed, 0x8a, 0x0b, 0xf9, 0x13, 0xb6, 0x37, 0x47, 0x3a, 0xff,
		0xed, 0x43, 0x78, 0xae, 0xe8, 0xa9, 0xbb, 0x10, 0xdb, 0x96, 0x3d, 0xb7,
		0x4b, 0xed, 0xc3, 0xf3, 0xbd, 0xd7, 0xda, 0x6d, 0x45, 0x2d, 0x3b, 0x35,
		0xca, 0x0a, 0xf2, 0xd5, 0xd3, 0x75, 0xcf, 0xa6, 0x8d, 0x02, 0x4c, 0x93,
		0xd7, 0x42, 0x83, 0xe3, 0x34, 0x49, 0x72, 0x16, 0xd3, 0xd0, 0x0f, 0xf1,
		0x14, 0x4b, 0xd1, 0x70, 0x06, 0x56, 0x2a, 0xda, 0x76, 0x11, 0x4a, 0x8b,
		0xbc, 0xbe, 0x5a, 0x74, 0xae, 0x37, 0x66, 0x6a, 0x57, 0xb6, 0xd8, 0x47,
		0xa5, 0xd7, 0x76, 0x50, 0x8e, 0xac, 0xb5, 0xe9, 0x72, 0x06, 0x41, 0x61,
		0x8f, 0xbb, 0x88, 0x53, 0x2e, 0x1c, 0x66, 0xc2, 0x5c, 0xde, 0xd5, 0x5a,
		0xab, 0x48, 0xdb, 0x05, 0x30, 0x0d, 0xd5, 0x3a, 0x4b, 0x62, 0xeb, 0xd3,
		0xed, 0x54, 0xd9, 0x49, 0x67, 0xd4, 0xe1, 0x07, 0xed, 0xa6, 0x73, 0xa2,
		0xe6, 0x10, 0xbc, 0x8d, 0xb1, 0x8c, 0xcf, 0x1a, 0x9b, 0x1d, 0x2e, 0x2b,
		0x67, 0xb0, 0x85, 0xa7, 0x80, 0xa5, 0xa9, 0xad, 0xfc, 0x3a, 0xe0, 0x8c,
		0x10, 0x08, 0xff, 0x55, 0xfc, 0x67, 0x77, 0xb9, 0xef, 0x40, 0xf5, 0x8d,
		0xbd, 0x77, 0x98, 0x6f, 0xbf, 0xa4, 0xc9, 0xe7, 0x6e, 0x0b, 0x88, 0x19,
		0x52, 0x38, 0xb2, 0xea, 0x31, 0xa6, 0x46, 0x91, 0x16, 0xd9, 0x55, 0xf2,
		0x65, 0xec, 0x2d, 0x86, 0xfc, 0x80, 0x3c, 0x72, 0x8e, 0x65, 0x23, 0x96,
		0x1d, 0x12, 0x6c, 0xbe, 0xd7, 0x6d, 0x2b, 0x38, 0x03, 0xa4, 0xb6, 0xc2,
		0xc2, 0x5f, 0x1b, 0x6b, 0xb5, 0x14, 0x81, 0x22, 0x25, 0xe4, 0x4b, 0x35,
		0x36, 0x3e, 0xc1, 0x14, 0x9a, 0xac, 0x4e, 0xc7, 0xd9, 0x49, 0x3f, 0x5f,
		0xa1, 0x88, 0x0c, 0xd2, 0x9f, 0xc9, 0xae, 0x85, 0xa8, 0xb1, 0x36, 0x75,
		0x4e, 0x54, 0x7c, 0xa0, 0xbc, 0x7e, 0x5e, 0xf7, 0x58, 0xaa, 0x4b, 0x4b,
		0x35, 0x33, 0x83, 0xb5, 0x9e, 0xe1, 0xf6, 0x26, 0xbe, 0x57, 0xf4, 0x5b,
		0xcd, 0xfc, 0x65, 0xfa, 0x95, 0x4c, 0x6e, 0xfe, 0xd3, 0x13, 0x92, 0xc7,
		0x39, 0x82, 0x09, 0xd4, 0xf5, 0xa3, 0x39, 0x80, 0x31, 0xc7, 0xbf, 0xc7,
		0x19, 0xf3, 0xf4, 0x88, 0xa6, 0x39, 0xc2, 0x09, 0xc6, 0xa5, 0xaf, 0x3f,
		0x6b, 0xf2, 0x71, 0xd8, 0x50, 0xcd, 0xea, 0x7f, 0x7c, 0x94, 0x4c, 0xd7,
		0xaa, 0xb5, 0x5f, 0xaa, 0xab, 0x25, 0x02, 0x66, 0xea, 0x8e, 0xe1, 0x14,
		0xa9, 0x55, 0x80, 0xdf, 0x59, 0x74, 0x6c, 0xeb, 0xc5, 0xbb, 0x06, 0x47,
		0xc3, 0xc4, 0x57, 0x07, 0xc7, 0x0d, 0x8c, 0xd1, 0x69, 0xee, 0xff, 0x53,
		0xf8, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x34, 0x5a, 0x29, 0xc3, 0xa8, 0x41,
		0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
